#!/bin/sh

GVF=NVME-VERSION-FILE
DEF_VER=v1.11.1

LF='
'

# First see if there is a version file (included in release tarballs),
# then try git-describe, then default.
if test -f version
then
	VN=$(sed 1q version) || VN="$DEF_VER"
elif test -d .git -o -f .git &&
	VN=$(git describe --tags --match "v[0-9]*" --abbrev=4 HEAD 2>/dev/null) &&
	case "$VN" in
	*$LF*) (exit 1) ;;
	v[0-9]*)
		git update-index -q --refresh
		test -z "$(git diff-index --name-only HEAD --)" ||
		VN="$VN-dirty" ;;
	esac
then
	OVN="$VN"
	VN=$(echo "$VN" | sed -e 's/-/./g');
else
	VN="$DEF_VER"
fi

VN=$(expr "$VN" : v*'\(.*\)')
OVN=$(expr "$OVN" : v*'\(.*\)')
MVN=$(expr "$OVN" : v*'\([0-9.]*\)')
RVN=$(expr "$OVN" : v*'[0-9.]*\-\(.*\)')
test -n "$RVN" && RDVN=0.$(echo "$RVN" | sed -e 's/-/./g') || RDVN="1"

if test -r $GVF
then
	VC=$(sed 1q $GVF | sed -e 's/^NVME_VERSION = //')
else
	VC=unset
fi
test "$VN" = "$VC" || {
	echo >&2 "NVME_VERSION = $VN"
	echo "NVME_VERSION = $VN" >$GVF
	echo "DOTDASH_VERSION = $OVN" >>$GVF
	echo "SPEC_VERSION = $MVN" >>$GVF
	echo "SPEC_RELEASE = $RDVN" >>$GVF
}


