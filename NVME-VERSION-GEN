#!/bin/sh

GVF=NVME-VERSION-FILE
DEF_VER=v0.5

LF='
'

# First see if there is a version file (included in release tarballs),
# then try git-describe, then default.
if test -f version
then
	VN=$(sed 1q version) || VN="$DEF_VER"
elif test -d .git -o -f .git &&
	VN=$(git describe --tags --match "v[0-9]*" --abbrev=4 HEAD 2>/dev/null) &&
	case "$VN" in
	*$LF*) (exit 1) ;;
	v[0-9]*)
		git update-index -q --refresh
		test -z "$(git diff-index --name-only HEAD --)" ||
		VN="$VN-dirty" ;;
	esac
then
	OVN="$VN"
	VN=$(echo "$VN" | sed -e 's/-/./g');
else
	VN="$DEF_VER"
fi

VN=$(expr "$VN" : v*'\(.*\)')
OVN=$(expr "$OVN" : v*'\(.*\)')
MVN=$(expr "$OVN" : v*'\([0-9.]*\)')
RVN=$(expr "$OVN" : v*'[0-9.]*\-\(.*\)')

# Add a "0." prefix to the release ID, but don't allow it to be doubled-up when
# this script is called multiple times during a build.
if [[ -n $RVN && $RVN =~ ^0 ]]
then
    RDVN=$(echo "$RVN" | sed -e 's/-/./g')
elif [[ -n $RVN ]]
then
    RDVN=0.$(echo "$RVN" | sed -e 's/-/./g')
else
    RDVN="1"
fi

# Convert a 'git describe' version to something that makes rpm versioning
# happy:
#    4.2-rc1-26-ge1dc405 => 4.2-0~rc1_26HPE
#    0.5.17.g8e16 => 0.5-0~17HPE
HPE_RDVN=$(echo "0~$RVN" | sed -e 's/\([0-9][0-9]*\)\-g.*$/\1HPE/' -e 's/\-/_/g')

if test -r $GVF
then
	VC=$(sed 1q $GVF | sed -e 's/^NVME_VERSION = //')
else
	VC=unset
fi
test "$VN" = "$VC" || {
	echo >&2 "NVME_VERSION = $VN"
	echo "NVME_VERSION = $VN" >$GVF
	echo "DOTDASH_VERSION = $OVN" >>$GVF
	echo "SPEC_VERSION = $MVN" >>$GVF
	echo "SPEC_RELEASE_ORIG = $RDVN" >>$GVF
	echo "SPEC_RELEASE = $HPE_RDVN" >>$GVF
}


